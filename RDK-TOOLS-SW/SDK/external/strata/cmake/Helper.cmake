function(add_subdirectory_optional dir)
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${dir}/CMakeLists.txt")
        add_subdirectory(${dir})
    endif()
endfunction()

function(target_include_directories_from_object target)
    foreach(object ${ARGN})
        get_target_property(INCLUDE_DIRS ${object} INTERFACE_INCLUDE_DIRECTORIES)
        if(NOT INCLUDE_DIRS STREQUAL INCLUDE_DIRS-NOTFOUND)
            target_include_directories(${target} PUBLIC ${INCLUDE_DIRS})
        endif()
    endforeach()
endfunction()

function(target_link_libraries_to_object target)
    foreach(object ${ARGN})
        get_target_property(INCLUDE_DIRS ${object} INTERFACE_INCLUDE_DIRECTORIES)
        if(NOT INCLUDE_DIRS STREQUAL INCLUDE_DIRS-NOTFOUND)
            target_include_directories(${target} PUBLIC ${INCLUDE_DIRS})
        endif()

        get_target_property(COMPILE_DEFS ${object} INTERFACE_COMPILE_DEFINITIONS)
        if(NOT COMPILE_DEFS STREQUAL COMPILE_DEFS-NOTFOUND)
            target_compile_definitions(${target} PUBLIC ${COMPILE_DEFS})
        endif()

        get_target_property(LINK_LIBRARIES ${object} INTERFACE_LINK_LIBRARIES)
        if(NOT LINK_LIBRARIES STREQUAL LINK_LIBRARIES-NOTFOUND)
            target_link_libraries(${target} PUBLIC ${LINK_LIBRARIES})
        endif()

        get_target_property(type ${target} TYPE)
        if(type STREQUAL OBJECT_LIBRARY)
            set(LINK_TYPE PUBLIC)
        else()
            set(LINK_TYPE PRIVATE)
        endif()

        get_target_property(SOURCES ${object} SOURCES)
        foreach(source ${SOURCES})
            if ("${source}" MATCHES "^\\$\\<TARGET_OBJECTS:")
                target_sources(${target} ${LINK_TYPE} ${source})
            endif()
        endforeach()

        target_sources(${target} ${LINK_TYPE} $<TARGET_OBJECTS:${object}>)
    endforeach()
endfunction()
